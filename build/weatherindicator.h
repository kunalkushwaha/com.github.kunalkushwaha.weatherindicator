/* weatherindicator.h generated by valac 0.40.19, the Vala compiler, do not modify */


#ifndef __WEATHERINDICATOR_H__
#define __WEATHERINDICATOR_H__

#include <glib.h>
#include <wingpanel.h>
#include <gmodule.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>

G_BEGIN_DECLS


#define WEATHERINDICATOR_TYPE_INDICATOR (weatherindicator_indicator_get_type ())
#define WEATHERINDICATOR_INDICATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WEATHERINDICATOR_TYPE_INDICATOR, weatherindicatorIndicator))
#define WEATHERINDICATOR_INDICATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WEATHERINDICATOR_TYPE_INDICATOR, weatherindicatorIndicatorClass))
#define WEATHERINDICATOR_IS_INDICATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WEATHERINDICATOR_TYPE_INDICATOR))
#define WEATHERINDICATOR_IS_INDICATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WEATHERINDICATOR_TYPE_INDICATOR))
#define WEATHERINDICATOR_INDICATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WEATHERINDICATOR_TYPE_INDICATOR, weatherindicatorIndicatorClass))

typedef struct _weatherindicatorIndicator weatherindicatorIndicator;
typedef struct _weatherindicatorIndicatorClass weatherindicatorIndicatorClass;
typedef struct _weatherindicatorIndicatorPrivate weatherindicatorIndicatorPrivate;

#define WEATHER_WIDGETS_TYPE_DISPLAY_WIDGET (weather_widgets_display_widget_get_type ())
#define WEATHER_WIDGETS_DISPLAY_WIDGET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WEATHER_WIDGETS_TYPE_DISPLAY_WIDGET, WeatherWidgetsDisplayWidget))
#define WEATHER_WIDGETS_DISPLAY_WIDGET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WEATHER_WIDGETS_TYPE_DISPLAY_WIDGET, WeatherWidgetsDisplayWidgetClass))
#define WEATHER_WIDGETS_IS_DISPLAY_WIDGET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WEATHER_WIDGETS_TYPE_DISPLAY_WIDGET))
#define WEATHER_WIDGETS_IS_DISPLAY_WIDGET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WEATHER_WIDGETS_TYPE_DISPLAY_WIDGET))
#define WEATHER_WIDGETS_DISPLAY_WIDGET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WEATHER_WIDGETS_TYPE_DISPLAY_WIDGET, WeatherWidgetsDisplayWidgetClass))

typedef struct _WeatherWidgetsDisplayWidget WeatherWidgetsDisplayWidget;
typedef struct _WeatherWidgetsDisplayWidgetClass WeatherWidgetsDisplayWidgetClass;
typedef struct _WeatherWidgetsDisplayWidgetPrivate WeatherWidgetsDisplayWidgetPrivate;

struct _weatherindicatorIndicator {
	WingpanelIndicator parent_instance;
	weatherindicatorIndicatorPrivate * priv;
};

struct _weatherindicatorIndicatorClass {
	WingpanelIndicatorClass parent_class;
};

struct _WeatherWidgetsDisplayWidget {
	GtkBox parent_instance;
	WeatherWidgetsDisplayWidgetPrivate * priv;
};

struct _WeatherWidgetsDisplayWidgetClass {
	GtkBoxClass parent_class;
};


GType weatherindicator_indicator_get_type (void) G_GNUC_CONST;
weatherindicatorIndicator* weatherindicator_indicator_new (void);
weatherindicatorIndicator* weatherindicator_indicator_construct (GType object_type);
WingpanelIndicator* get_indicator (GModule* module,
                                   WingpanelIndicatorManagerServerType server_type);
GType weather_widgets_display_widget_get_type (void) G_GNUC_CONST;
WeatherWidgetsDisplayWidget* weather_widgets_display_widget_new (void);
WeatherWidgetsDisplayWidget* weather_widgets_display_widget_construct (GType object_type);
void weather_widgets_display_widget_update_state (WeatherWidgetsDisplayWidget* self,
                                                  const gchar* state,
                                                  gdouble temperature);


G_END_DECLS

#endif
